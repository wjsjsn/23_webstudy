<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>배열 : array</title>
<script type="text/javascript">
	// 자바 스크립트의 배열 : 크기를 지정하지 않아도 됨
	//                              모든 자료를 담을 수 있음
	// 방법 1
	var arr = new Array();
	arr[0] = 10;
	arr[1] = true;
	arr[2] = 'A';
	arr[3] = '한국 ict 인재 개발원';
	arr[4] = 167.21;
	
	// 출력
	for (var i = 0; i < arr.length; i++) {
		document.write(arr[i] + "&nbsp;&nbsp;");
	}
	document.write("<hr>");
	
	// 자바의 개선된 for문(foreach)과 비슷한 forin문이 있음(똑같은 거 x)
	// 자바는 데이터 자체를 넘기지만 자바스크립트는 index를 넘김
	// 여기서 index는 k
	for ( var k in arr) {
	//	document.write(k + "&nbsp;&nbsp;");
	document.write(arr[k]+ "&nbsp;&nbsp;");
	}
	document.write("<hr>");
	
	// 방법 2
	var arr2 = ["포도", 15, false, 98.7];
	for ( var k in arr2) {
		//	document.write(k + "&nbsp;&nbsp;");
		document.write(arr2[k]+ "&nbsp;&nbsp;");
		}
		document.write("<hr>");
		
		// 문자열을 배열로 만들기
		var myData = "java,jsp,html,css,javascript,spring";
		// myArr은 ","를 기준으로 배열로 만들어짐
		var myArr = myData.split(",");
		for ( var k in myArr) {
			//	document.write(k + "&nbsp;&nbsp;");
			document.write(myArr[k]+ "&nbsp;&nbsp;");
			}
			document.write("<hr>");
			
		// arr2 배열을 문자열로 만들기
		// 배열.join("구분자");
		var myData2 = arr2.join(",");
		document.write(myData2);
		document.write("<hr>");
		
		// 자바 스크립트의 배열은 추가, 삭제 가능
		var myArr3 = ["java", "html", "css", "js"];
		myArr3.push("jsp");
		myArr3.unshift("spring");
		for ( var k in myArr3) {
			//	document.write(k + "&nbsp;&nbsp;");
			document.write(myArr3[k]+ "&nbsp;&nbsp;");
			}
			document.write("<hr>");
</script>
</head>
<body>
</body>
</html>